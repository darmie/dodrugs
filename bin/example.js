// Generated by Haxe 3.4.2
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Example = function() { };
Example.main = function() {
	var person = Example.buildPerson(Example.setupInjector());
	console.log("I am " + person.name + ", I am " + person.age + " years old and I have " + person.favouriteNumbers.length + " favourite numbers");
};
Example.setupInjector = function() {
	return null;
};
Example.buildPerson = function(injector) {
	return injector._get("Example.Person");
};
var Person = function() { };
var dodrugs_DynamicInjector = function() { };
dodrugs_DynamicInjector.prototype = {
	getFromID: function(id) {
		return this._get(id);
	}
	,_get: function(id) {
		if(Object.prototype.hasOwnProperty.call(this.mappings,id)) {
			return this.mappings[id](this,id);
		} else if(this.parent != null) {
			return this.parent.getFromID(id);
		} else {
			throw new js__$Boot_HaxeError("The injection had no mapping for \"" + id + "\"");
		}
	}
};
var dodrugs_Injector = function() { };
dodrugs_Injector.__super__ = dodrugs_DynamicInjector;
dodrugs_Injector.prototype = $extend(dodrugs_DynamicInjector.prototype,{
});
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
Example.main();
})();
